C     $Id$
C
C     ************************************************
C     ****** GSAF BASIC ROUTINES V3.5 : FILE IO ******
C     ************************************************
C
C     ****** OPEN TEMP GRAPHIC FILE ******
C
      SUBROUTINE GSTOPN
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(.NOT.LOPENT) THEN
         INQUIRE(NFCT,OPENED=LOP)
         IF(LOP) THEN
            LOPENT=.TRUE.
         ELSE
            OPEN(NFCT,IOSTAT=ISTAT,FORM='UNFORMATTED',STATUS ='SCRATCH')
            IF(ISTAT.EQ.0) THEN
               LOPENT=.TRUE.
            ELSE
               WRITE(6,'(A,I6)') 
     &              'XX GSTOPN: TEMP FILE OPEN ERROR : STATUS = ',ISTAT
            ENDIF
         ENDIF
      ENDIF
      RETURN
      END
C
C     ****** CLOSE TEMP GRAPHIC FILE ******
C
      SUBROUTINE GSTCLS
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(LSAVES) CALL GSFOFF
      IF(LSAVET) CALL GSTOFF
C
      IF(LOPENT) THEN
         INQUIRE(NFCT,OPENED=LOP)
         IF(LOP) THEN
            REWIND NFCT
            CLOSE(NFCT)
         ENDIF
         LOPENT=.FALSE.
      ENDIF
      RETURN
      END
C
C     ****** OPEN GRAPHIC FILE NAME AND SAVE ON ******
C
      SUBROUTINE GSFOPN(FCSNAMN,IND)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
      COMMON /GSAFNF/ FCSNAM
      CHARACTER FCSNAM*80,FCSNAMN*80
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(.NOT.LOPENT) CALL GSTOPN
C
      IF(.NOT.LOPENS) THEN
         INQUIRE(FILE=FCSNAMN,EXIST=LEX,ERR=40)
         FCSNAM=FCSNAMN
         IF(LEX) THEN
            OPEN(NFCS,FILE=FCSNAM,IOSTAT=ISTAT,STATUS='OLD',ERR=10)
            IF(ISTAT.EQ.0) THEN
               WRITE(6,'(A,A40,A)') 
     &              '# OLD FILE (',FCSNAM,') IS ASSIGNED.'
               NPAGES=0
               NWORDS=0
               LOPENS=.TRUE.
               GOTO 30
            ENDIF
   10       WRITE(6,*) 'XX GSFOPN: OLD FILE OPEN ERROR : IOSTAT=',ISTAT
         ELSE
            OPEN(NFCS,FILE=FCSNAM,IOSTAT=ISTAT,STATUS='NEW',ERR=20)
            IF(ISTAT.EQ.0) THEN
               WRITE(6,'(A,A40,A)') 
     &              '# NEW FILE (',FCSNAM,') IS CREATED.'
               NPAGES=0
               NWORDS=0
               LOPENS=.TRUE.
               GOTO 30
            ENDIF
   20       WRITE(6,*) 'XX GSFOPN: NEW FILE OPEN ERROR : IOSTAT=',ISTAT
         ENDIF
   30    CONTINUE
      ENDIF
      IF(LOPENS) THEN
         IND=0
      ELSE
         IND=1
      ENDIF
      RETURN
C
   40 WRITE(6,*) 'XX GSFOPN: INVALID FILE NAME'
      IND=2
      RETURN
      END
C
C     ****** CLOSE GRAPHIC FILE NAME ******
C
      SUBROUTINE GSFCLS
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
      COMMON /GSAFNF/ FCSNAM
      CHARACTER FCSNAM*80
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(LSAVES) CALL GSFOFF
C
      IF(LOPENS) THEN
         INQUIRE(NFCS,OPENED=LOP)
         IF(LOP) THEN
            REWIND NFCS
            CLOSE(NFCS)
            IF(NPAGES.NE.0) WRITE(6,601) FCSNAM,NPAGES,NWORDS*0.8
         ENDIF
         LOPENS=.FALSE.
      ENDIF
      RETURN
C
  601 FORMAT(1H ,'# SAVE FILE CLOSED. : ',A40/
     &       1H ,'# SAVED PAGES/BYTE  = ',I5,' / ',F10.3,' KB')
      END
C
C     ****** SET TEMP FILE SAVE ON ******
C
      SUBROUTINE GSTON
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(LOPENT) THEN
         LSAVET=.TRUE.
         LFIL=.TRUE.
      ELSE
         WRITE(6,*) 'XX GSTON: GRAPHIC TEMP FILE IS NOT OPEN'
      ENDIF
      RETURN
      END
C
C     ****** SET TEMP FILE SAVE OFF ******
C
      SUBROUTINE GSTOFF
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(LOPENT) THEN
         LSAVET=.FALSE.
         LFIL=.FALSE.
      ELSE
         WRITE(6,*) 'XX GSTOFF: GRAPHIC TEMP FILE IS NOT OPEN'
      ENDIF
      RETURN
      END
C
C     ****** SET GRAPHIC FILE SAVE ON ******
C
      SUBROUTINE GSFON
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(LOPENS) THEN
         LSAVES=.TRUE.
      ELSE
         WRITE(6,*) 'XX GSFON: GRAPHIC FILE IS NOT OPEN'
      ENDIF
      RETURN
      END
C
C     ****** SET GRAPHIC SAVE OFF ******
C
      SUBROUTINE GSFOFF
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      LSAVES=.FALSE.
      RETURN
      END
C
C     ****** SET GRAPHIC SAVE FILE (OBSOLETE) ******
C
      SUBROUTINE GSFILE(NFCS,NFCT)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      CHARACTER FCSNAM*80
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(NFCS.GE.0.AND.NFCS.LE.63) THEN
         IF(NFCS.EQ.0) THEN
            CALL GSFCLS
         ELSE
            IF(NFCT.GE.1.AND.NFCT.LE.63) THEN
               CALL GSCODE(NFCS,NFCT)
  100          CALL FLNAME(FCSNAM)
               CALL GSFOPN(FCSNAM,IND)
               IF(IND.NE.0) GOTO 100
            ELSE
               WRITE(6,*) 'XX GSFILE: NFCT: OUT OF RANGE'
            ENDIF
         ENDIF
      ELSE
         WRITE(6,*) 'XX GSFILE: NFCS: OUT OF RANGE'
      ENDIF
      RETURN
      END
C
C     ****** SET GRAPHIC SAVE FILE CODE ******
C
      SUBROUTINE GSCODE(NFCSN,NFCTN)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLG/ LGSAF,LPAGE,LFIL,LKEEP,NPAGE,NHEAD
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
C
      IF(.NOT.LGSAF) RETURN
      IF(LPAGE) RETURN
C
      IF(NFCSN.LT.1.OR.NFCSN.GT.63) RETURN
      IF(NFCTN.LT.1.OR.NFCTN.GT.63) RETURN
C
      IF(LOPENT.AND.(NFCT.NE.NFCTN)) THEN
         WRITE(6,*) 'XX GSCODE: CLOSE TEMP FILE FIRST!'
      ELSE
         NFCT=NFCTN
      ENDIF
C
      IF(LOPENS.AND.(NFCS.NE.NFCSN)) THEN
         WRITE(6,*) 'XX GSCODE: CLOSE GRAPHIC FILE FIRST!'
      ELSE
         NFCS=NFCSN
      ENDIF
      RETURN
      END
C
C     ****** SET GRAPHIC SAVE FILE ******
C
      SUBROUTINE FLNAME(FCSNAM)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFMD/ ITMODE
      CHARACTER FCSNAM*80,KID*1
C
    1 WRITE(6,*) '# INPUT : GRAPHIC SAVE FILE NAME'
      CALL DVFLSH
      READ(5,'(A80)',END=900,ERR=1) FCSNAM
      INQUIRE(FILE=FCSNAM,EXIST=LEX,ERR=1)
      IF(LEX.AND.(ITMODE.EQ.1)) THEN
    2    WRITE(6,*) '# OLD FILE IS GOING TO BE OVERWRITTEN.  ',
     &              '  ARE YOU SURE, (Y) OR (N) ?'
         CALL DVFLSH
         READ(5,'(A1)',END=1,ERR=2) KID
         CALL GUCPTL(KID)
         IF(KID.NE.'Y') GOTO 1
      ENDIF
C
  900 CONTINUE
      RETURN
      END
C
C     ++++++ INITIALIZE TEMP FILE ++++++
C
      SUBROUTINE FLPAGS
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
C
      IF(LOPENT) THEN
         REWIND NFCT
         NBUFF=0
         IBUFF=3
      ENDIF
      RETURN
      END
C
C     ++++++ TERMINATE TEMP FILE  ++++++
C
      SUBROUTINE FLPAGE
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
C
      IF(LOPENT) THEN
         IBUFF=IBUFF+1
         IDATA(IBUFF)=-1
         WRITE(NFCT) IDATA
         NBUFF=NBUFF+1
      ENDIF
      RETURN
      END
C
C     ++++++ SAVE DATA FROM TEMP FILE TO SAVE FILE ++++++
C
      SUBROUTINE FLSAVE(NPAGE)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFS1/ SIZEXS,SIZEYS,DSIZE
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFLF/ LOPENS,LOPENT,LSAVES,LSAVET
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
C
      IF(LOPENT.AND.LOPENS.AND.(NBUFF.GE.1)) THEN
         REWIND NFCT
C
         READ(NFCT) IDATA
         IDATA(1)=NPAGE*65536+1
         IDATA(2)=NINT(SIZEXS*100000.)
         IDATA(3)=NINT(SIZEYS*100000.)
         CALL FLWRIT
C
         DO 1000 N=2,NBUFF
            READ(NFCT) IDATA
            IDATA(1)=NPAGE*65536+N
            CALL FLWRIT
 1000    CONTINUE
C
         NPAGES=NPAGES+1
         NWORDS=NWORDS+NBUFF
         WRITE(6,601) NPAGE,NFCS,NBUFF*0.8
      ENDIF
      RETURN
  601 FORMAT(1H ,'# PAGE ',I5,' WAS SAVED IN FC ',I2,'.',
     &           '  ( SAVED BYTES : ',F10.3,' KB )')
      END
C
C     ++++++ CONVERT BINARY DATA TO TEXT DATA ++++++
C
      SUBROUTINE FLWRIT
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
      CHARACTER KK*80
      DIMENSION IK(80),I(3)
C
      DO 1000 N=1,10
         DO 100 M=1,5
            J=16*M-15
            I(1)=IDATA(15*N+3*M-17)
            I(2)=IDATA(15*N+3*M-16)
            I(3)=IDATA(15*N+3*M-15)
            K=0
            IF(I(1).LT.0) K=K+32
            IF(I(2).LT.0) K=K+16
            IF(I(3).LT.0) K=K+8
            I(1)=ABS(I(1))
            I(2)=ABS(I(2))
            I(3)=ABS(I(3))
            IF(I(1).GE.1073741824) K=K+4
            IF(I(2).GE.1073741824) K=K+2
            IF(I(3).GE.1073741824) K=K+1
            I(1)=MOD(I(1),1073741824)
            I(2)=MOD(I(2),1073741824)
            I(3)=MOD(I(3),1073741824)
            IK(J)=K+32
            DO 10 JL=1,3
               IL=I(JL)
               DO 10 JLL=1,5
                  K=MOD(IL,64)
                  IL=IL/64
                  IK(J+JL*5+JLL-5)=K+32
   10       CONTINUE
  100    CONTINUE
         CALL ASCCHR(IK,KK,80)
         WRITE(NFCS,601) KK
  601    FORMAT(A80)
 1000 CONTINUE
      RETURN
      END
C
C     ++++++ WRITE XY DATA ++++++
C
      SUBROUTINE BUFFXY(IND,IX,IY)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
C
      IF(IND.EQ.0) THEN
         IBUFF=IBUFF+1
         IDATA(IBUFF)=IX*65536+IY
      ELSEIF(IND.EQ.1) THEN
         IBUFF=IBUFF+1
         IDATA(IBUFF)=IX*65536+IY+32768
      ELSEIF(IND.EQ.2) THEN
         IBUFF=IBUFF+1
         IDATA(IBUFF)=-(IX*65536+IY+32768)
      ENDIF
      IF(IBUFF.GE.150) CALL FLBUFW
      RETURN
      END
C
C     ++++++ WRITE XY N DATA ++++++
C        IND=11 : DVLINS
C        IND=12 : DVPOLY
C        IND=13 : RGBTRG
C
      SUBROUTINE BUFFXN(IND,IX,IY,N)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
      DIMENSION IX(*),IY(*)
C
      IBUFF=IBUFF+1
      IDATA(IBUFF)=-(IND*65536+N)
      IF(IBUFF.GE.150) CALL FLBUFW
C
      DO 10 I=1,N
         IBUFF=IBUFF+1
         IDATA(IBUFF)=IX(I)*65536+IY(I)
         IF(IBUFF.GE.150) CALL FLBUFW
   10 CONTINUE
      RETURN
      END
C
C     ++++++ WRITE TEXT DATA ++++++
C
      SUBROUTINE BUFFTX(IX,IY,IASC,NCHAR)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
      DIMENSION IASC(*)
C
      IBUFF=IBUFF+1
      IDATA(IBUFF)=-(10*65536+NCHAR)
      IF(IBUFF.GE.150) CALL FLBUFW
C
      IBUFF=IBUFF+1
      IDATA(IBUFF)=IX*65536+IY
      IF(IBUFF.GE.150) CALL FLBUFW
C
      DO 3000 II=NCHAR+1,((NCHAR-1)/4+1)*4
         IASC(II)=0
 3000 CONTINUE
C
      DO 3010 I=1,(NCHAR+3)/4
         II=4*(I-1)
         IBUFF=IBUFF+1
         IDATA(IBUFF)=((IASC(II+1)*256+IASC(II+2))*256
     &                 +IASC(II+3))*256+IASC(II+4)
         IF(IBUFF.GE.150) CALL FLBUFW
 3010 CONTINUE
      RETURN
      END
C
C     ++++++ WRITE SETTING DATA ++++++
C
      SUBROUTINE BUFFST(IND,I1,I2,I3,R1,R2)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
C
      IBUFF=IBUFF+1
      IDATA(IBUFF)=-(IND*65536+I1+16384)
      IF(IBUFF.GE.150) CALL FLBUFW
C
      IBUFF=IBUFF+1
      IDATA(IBUFF)=(I2+16384)*65536+I3+16384
      IF(IBUFF.GE.150) CALL FLBUFW
C
      IBUFF=IBUFF+1
      IDATA(IBUFF)=NINT(R1*100000.)
      IF(IBUFF.GE.150) CALL FLBUFW
C
      IBUFF=IBUFF+1
      IDATA(IBUFF)=NINT(R2*100000.)
      IF(IBUFF.GE.150) CALL FLBUFW
      RETURN
      END
C
C     ++++++ WRITE BUFFER TO TEMP FILE ++++++
C
      SUBROUTINE FLBUFW
C
      IMPLICIT LOGICAL(L)
      COMMON /GSAFFS/ NPAGES,NWORDS,NFCS,NFCT
      COMMON /GSAFBF/ NBUFF,IBUFF,IDATA(150)
C
      WRITE(NFCT) IDATA
      NBUFF=NBUFF+1
      IBUFF=1
      RETURN
      END
